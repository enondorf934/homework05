//******************************************************************************
// Copyright (C) 2016 University of Oklahoma Board of Trustees.
//******************************************************************************
// Last modified: Tue Feb  9 20:35:55 2016 by Chris Weaver
//******************************************************************************
// Major Modification History:
//
// 20160209 [weaver]:	Original file.
//
//******************************************************************************
// Notes:
//
// To compile on the command line
// 1. Go to the directory that contains build.gradle
// 2. Run "gradle installDist"
//
// To run on the command line
// 1. Go to directory build/install/graphics/bin
// 2. Run the script for the class you want (./foo or double-click the icon).
//
//******************************************************************************
// COMMANDS:
//
// See all available tasks in the terminal, or in a window:
// gradle -q tasks --all
// gradle --gui
//
// Scrub all build results (doesn't remove .gradle cache in home directory):
// gradle clean
//
// Generate javadoc for all subprojects:
// gradle javadoc
//
// Bundle into command line applications, or a zip file containing them:
// gradle installDist
// gradle distZip
//
//******************************************************************************

buildscript
{
	repositories
	{
		mavenCentral()
	}
}

//******************************************************************************

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'application'
apply plugin: 'eclipse'

//******************************************************************************

// Adapted from http://stackoverflow.com/questions/18421857/
// See also http://stackoverflow.com/questions/21241767/
//
// Creates scripts for entry points
// Subproject must apply application plugin to be able to call this method.
def createScript(project, mainClass, name, jvmOpts) {
  project.tasks.create(name: name, type: CreateStartScripts) {
    applicationName = name
    mainClassName   = mainClass
	defaultJvmOpts  = jvmOpts
    outputDir       = new File(project.buildDir, 'scripts')
    classpath       = project.tasks[JavaPlugin.JAR_TASK_NAME].outputs.files + project.configurations.runtime
  }
  project.tasks[name].dependsOn(project.jar)

  project.applicationDistribution.with {
    into("bin") {
      from(project.tasks[name])
      fileMode = 0755
    }
  }
}

//******************************************************************************

sourceCompatibility = 1.8

group = "edu.ou.cs.cg"
version = '1.1.0'

applicationName = "template"
mainClassName = "edu.ou.cs.cg.example.Template"
applicationDefaultJvmArgs = ['-Xms128m', '-Xmx756m', '-noclassgc',\
 '-Dfile.encoding=utf-8', '-Dapple.laf.useScreenMenuBar=false',\
 '-Dapple.awt.showGrowBox=true', '-Dapple.awt.brushMetalLook=false',\
 '-Dapple.awt.antialiasing=on', '-Dapple.awt.graphics.UseQuartz=true', ]

//******************************************************************************
// Alternative Start Scripts
//******************************************************************************

def altJvmArgs = ['-Xms128m', '-Xmx768m', '-noclassgc',\
 '-Dfile.encoding=utf-8', '-Dapple.laf.useScreenMenuBar=false',\
 '-Dapple.awt.showGrowBox=true', '-Dapple.awt.brushMetalLook=false',\
 '-Dapple.awt.antialiasing=on', '-Dapple.awt.graphics.UseQuartz=true', ]

// Create scripts for alternate entry points (main() methods)
createScript(project, 'edu.ou.cs.cg.example.Gasket', 'gasket', altJvmArgs)
createScript(project, 'edu.ou.cs.cg.example.Lorenz', 'lorenz', altJvmArgs)
createScript(project, 'edu.ou.cs.cg.example.Template', 'template', altJvmArgs)
createScript(project, 'edu.ou.cs.cg.example.Viewport', 'viewport', altJvmArgs)
createScript(project, 'edu.ou.cs.cg.homework.Homework02Chris', 'hw02-chris', altJvmArgs)
createScript(project, 'edu.ou.cs.cg.interaction.Application', 'interaction', altJvmArgs)
createScript(project, 'edu.ou.cs.cg.interaction.Network', 'network-test', altJvmArgs)

// You'll need to add more of these for future assignments. For each one, put
// the fully qualified classname of the class with main() in the second argument
// and the desired program name in the third argument.
createScript(project, 'edu.ou.cs.cg.homework.Homework02', 'hw02', altJvmArgs)
//createScript(project, 'edu.ou.cs.cg.homework.Homework03', 'hw03', altJvmArgs)
//createScript(project, 'edu.ou.cs.cg.homework.Homework04', 'hw04', altJvmArgs)
createScript(project, 'edu.ou.cs.cg.homework.Homework5.Application', 'hw05', altJvmArgs)

//******************************************************************************
// Source Sets
//******************************************************************************

sourceSets
{
	main
	{
		resources
		{
			srcDir 'src/main/java'
			//include ".*.rsrc"
			exclude "**/.DS_Store", "**/*.java.*"
		}
	}
}

//******************************************************************************
// Tasks
//******************************************************************************

jar
{
    manifest
    {
        attributes\
        	'Implementation-Title': 'ou-cs-cg',\
			'Implementation-Version': version,\
			'Main-Class': mainClassName

			manifest.attributes provider: 'tribe7.net'
    		manifest.attributes permissions: 'all-permissions'
    		manifest.attributes codebase: '*'
    }
}

javadoc
{
	maxMemory '756m'
}

// Hack to use alternative maximum stack and heap sizes in Windows start scripts.
// There are probably more elegant ways to do this in recent versions of Gradle.
// Note: This only affects primary scripts, not those using our createScript().
startScripts
{
	doLast
	{
		// Windows script file
		def wsf = file getWindowsScript()
		//wsf.text = wsf.text.replace("-Xms1g", "-Xms256m")
		//wsf.text = wsf.text.replace("-Xmx2g", "-Xmx1280m")
	}
}

//******************************************************************************
// Dependencies
//******************************************************************************

repositories
{
	mavenLocal()
	mavenCentral()
}

dependencies
{
	//**********************************************************************
	// REMOTE
	//**********************************************************************

	//runtime ('colt:colt:1.2.0') { transitive = false }

	//runtime ('com.vividsolutions:jts:1.13') { transitive = false }

	compile ('org.jogamp.jogl:jogl-all-main:2.1.5-01') { transitive = true }
	compile ('org.jogamp.gluegen:gluegen-rt-main:2.1.5-01') { transitive = true }
}

//******************************************************************************
